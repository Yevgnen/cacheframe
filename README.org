#+title: README
#+options: author:nil title:nil

* Table of Contents :TOC:
- [[#introduction][Introduction]]
- [[#installation][Installation]]
  - [[#from-pip][From pip]]
  - [[#from-source][From source]]
- [[#usage][Usage]]
  - [[#example][Example]]
- [[#contribution][Contribution]]
  - [[#formatting-code][Formatting Code]]

* Introduction

Simple Pandas file cache.

* Installation

** From pip

#+begin_src sh
pip install cacheframe
#+end_src

** From source

#+begin_src sh
pip install git+https://github.com/Yevgnen/cacheframe.git
#+end_src

* Usage

The only provided function decorator is ~cacheframe.cacheframe~ with the following arguments:

- ~cache_dir~: directory to place cache files (default: ~.cache~)
- ~file~: cache file name, support file types are: ~.csv~, ~.xlxs~, ~.pickle~, ~.json~, ~.parquet~ and ~.feather~ (default: ~dataframe.parquet~)
- ~read_kwds~: optional keyword arguments passed to readers (~pandas.to_*~) when reading cache
- ~write_kwds~: optional keyword arguments passed to writers (~pandas.read_*~) when writing cache
- ~ttl~: optional TTL value to invalid cache
- ~disable~: boolean indicator to enable or disable cache (default: ~False~)

Note that as Pandas does NOT install required engines for reading or writing specific file types, you maybe need to install them manually, e.g. ~pyarrow~ for ~.feather~, ~fastparquet~ for ~.parquet~, ~openpyxl~ for ~.xlsx~ ...

** Example

#+include: examples/example.py src python

* Contribution

** Formatting Code

To ensure the codebase complies with a style guide, please use [[https://github.com/PyCQA/flake8][flake8]], [[https://github.com/psf/black][black]] and [[https://github.com/PyCQA/isort][isort]] tools to format and check codebase for compliance with PEP8.

# Local Variables:
# eval: (add-hook 'before-save-hook (lambda nil (org-pandoc-export-to-gfm)) nil t)
# End:
